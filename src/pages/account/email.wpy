<style lang="less">
  @import "~assets/css/animation.wxss";
  @import "~assets/css/main.wxss";
  @import "~assets/css/icon.wxss";
  @import "~assets/css/iconfont.wxss";

  .require {
    margin-bottom: 10px;
    color: red;
  }
</style>

<template>
  <div class="cu-bar bg-white solid-bottom">
    <div class="action">
      <div class="cuIcon-title text-blue h2">
        <text>设置安全邮箱</text>
      </div>
    </div>
  </div>
  
  <div class="cu-form-group margin-top-sm">
    <div class="title">
      邮箱
      <span class="require">*</span>
    </div>
    <input v-model="email" type="text" style="height: 26.25px; line-height: 26.25px;" placeholder="填写安全邮箱"/>
  </div>

  <div class="cu-form-group">
    <div class="title">
      验证码
      <span class="require">*</span>
    </div>    
    <input v-model="code" type="text" style="height: 26.25px; line-height: 26.25px;" placeholder="验证码"/>
    <button class="cu-btn bg-green shadow" @tap="requestCode">验证码</button>
  </div>

  <button class="cu-btn bg-blue margin-tb-sm lg" :style="{width: '90%', marginLeft: '20px'}" @tap="submit">
    提交
  </button>
  <div v-if="showStatus" class="{{'bg-' + (error ? 'red' : 'green')}}" data-class="slide-top" :style="{textAlign: 'center', bottom: 0, width: '100%', position:'absolute'}">
    {{error ? error : '提交成功'}}
  </div>
</template>

<script>
  import wepy from '@wepy/core'
  import eventHub from '../../common/eventHub'
  import { sendCode, updateEmail } from '../../common/api'

  const WeValidator = require('we-validator')

  wepy.page({

    data: {
      error: null,
      showStatus: false,
      email: null,
      code: null,
    },

    onLoad(params, data) {
      this.regEvents();
      for(let key in this.$options.data){
        if (params[key] && params[key] != 'null'){
          this[key] = decodeURIComponent(params[key])
        }
      }
    },

    methods:{

      regEvents(){
        eventHub.$on('profiles-updated', () => {
          this.showStatusBar();
          setTimeout(function(){
            wepy.wx.navigateBack(1);
          }, 2000);
        });

        eventHub.$on('bad-request', (res) => {
          let errors = []
          if (res.data.error.code){
            errors.push(res.data.error.code)
          }
          if (res.data.error.phone){
            errors.push(res.data.error.phone)
          }
          this.error = errors.join(";")
          this.showStatusBar();
        });
      },

      requestCode(e){
        let validator = this.phoneValidator();
        if (! validator.checkData({email: this.email})) return
        sendCode({email: this.email})
      },

      submit(e) {
        let validator = this.formValidator();
        if (! validator.checkData({email: this.email, code: this.code})) return
        updateEmail({
          email: this.email,
          code: this.code
        }).then(res => {
          eventHub.$emit('sync-user');
        })
      },

      showStatusBar(){
        let that = this;
        this.showStatus = true
        setTimeout(function(){
          that.showStatus = false
        }, 2000);
      },

      phoneValidator() {
        return new WeValidator({
          rules: {
            email: {
              required: true,
              email: true
            },
          },
          messages: {
            email: {
              required: '请填写邮箱'
            },
          },
        })
      },

      formValidator() {
        return new WeValidator({
          rules: {
            email: {
              required: true,
              email: true
            },
            code: {
              required: true
            }
          },
          messages: {
            email: {
              required: '请填写邮箱'
            },
            code: {
              required: '请填写验证码'
            }
          },
        })
      },
      
    }
  });
</script>

<config>
  {
    navigationBarTitleText: '安全邮箱',
    usingComponents: {
      'grid-list': "~components/gridList"
    }
  }
</config>