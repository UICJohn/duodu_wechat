<style lang="less">
  .require {
    margin-bottom: 10px;
    color: red;
  }

  .column {
    display: flex;
    flex-direction: column;
  }

  .address-container {
    display: flex;
    flex-direction: column;
  }
</style>

<template>
  <div>
    <div class="cu-bar bg-white solid-bottom">
      <div class="action">
        <div class="cuIcon-title text-blue h2">
          <text>发帖找室友</text>
        </div>
      </div>
    </div>

    <div v-if="showStatus" class="{{'bg-' + (error ? 'red' : 'green')}}" data-class="slide-top" :style="{textAlign: 'center', top: 0, zIndex: 999,opacity: 1, width: '100%', position:'sticky'}">
      {{error ? '提交失败' : '提交成功'}}
    </div>
    
    <div class="cu-form-group margin-top">
      <div class="title">
        标题
        <span class="require">*</span>
      </div>
      <input type="text" v-model="title" style="height: 26.25px; line-height: 26.25px;" placeholder="简单介绍一下"/>
    </div>

    <div class="cu-form-group align-start">
      <div class="title">
        简介
        <span class="require">*</span>
      </div>
      <textarea v-model="body" placeholder="添加一些描述，如对室友的要求：晚归、养宠物、带异性回家等..."></textarea>
    </div>

    <div class="cu-form-group">
      <div class="title">
        入住时间
        <span class="require">*</span>
      </div>
      <picker mode="date" :value="availableFrom" :start="now" :end="end" bindchange="dateChange">
        <div class="picker">{{availableFrom || 'YY-MM-DD'}}</div>
      </picker>
    </div>

    <div class="cu-form-group">
      <div class="title"> 入住人数 </div>
      <input v-model="tenants" name="tenant" style="width: 50rpx" type="number"/>
      <div class="action">
        人
      </div>
    </div>


    <div class="cu-form-group">
      <div class="title">
        租金范围
      </div>
      <input name="min_rent" v-model="minRent" type="number" placeholder="最低" :style="{width: '20px', textAlign: 'center'}"/>
      -
      <input name="max_rent" type="number" v-model="maxRent" placeholder="最高" :style="{width: '20px', textAlign: 'center'}"/>
      <div class="footer">
        元/月
      </div>
    </div>

    <div class="cu-bar bg-white margin-top">
      <div class="action">
        添加常用地址
        <span class="require">*</span>
      </div>
      <div class="action">
        {{locations.length}}/4
      </div>
    </div>


    <div class="bg-white padding-sm address-container">
      <div class="flex solid line-pink round padding-tb-xs margin-lr-sm margin-tb-xs" v-for="(item, index) in locations" v-key="index">
        <div class="cu-tag bg-white" :data-name="item.name" style="width: 5%; justify-content: unset" @tap="delLocation">
          <text class="cuIcon-close"></text>
        </div>
        <div class="padding-lr-sm text-cut" style="padding-top:2px;">
          <text>{{item.address}}</text>
        </div>
      </div>

      <button :disabled="addressBtnStatus" class="cu-btn line-blue margin-top" @tap="chooseLocation">
        <span class="cuIcon-add"/>
        添加地址
      </button>
    </div>

    <div class="cu-bar bg-white margin-top">
      <div class="action">
        个人情况
      </div>
    </div>
    <div class="grid col-4 padding-lr padding-bottom bg-white">
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-cigarette" attrName="smoker"/>
        <text class="text-grey text-sm">抽烟</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-pet" attrName="hasPets"/>
        <text class="text-grey text-sm">带宠物</text>
      </div>
    </div>

    <div class="cu-bar bg-white margin-top">
      <div class="action">
        租房要求
      </div>
    </div>
    <div class="grid col-4 padding-lr padding-bottom bg-white">
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-furniture" attrName="hasFurniture"/>
        <text class="text-grey text-sm">带家具</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-appliance" attrName="hasAppliance"/>
        <text class="text-grey text-sm">带电器</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-cooktop" attrName="hasCookTop"/>
        <text class="text-grey text-sm">可做饭</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-aircon" attrName="hasAirConditioner"/>
        <text class="text-grey text-sm">带空调</text>
      </div>
    </div>
    <div class="grid col-4 padding-lr padding-bottom bg-white">
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="iconfont icon-internet" attrName="hasNetwork"/>
        <text class="text-grey text-sm">带网络</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="cuIcon-female" attrName="allowFemale"/>
        <text class="text-grey text-sm">只找女生</text>
      </div>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <activeBtn icon="cuIcon-male" attrName="allowMale"/>
        <text class="text-grey text-sm">只找男生</text>
      </div>
    </div>
  </div>
  <button class="cu-btn bg-blue margin-tb-sm lg" :style="{width: '90%', marginLeft: '20px'}" @tap="submit">
    提交
  </button>

  <modal :show.sync="showModal" :title="modalInfo.title" :body="modalInfo.body" :confirmEvent="modalInfo.confirmEvent" />
</template>

<script>
  import wepy from '@wepy/core'
  import eventHub from '../../common/eventHub'
  import { createPost } from '../../common/api'
  const WeValidator = require('we-validator')

  wepy.page({
    data: {
      // form
      title: null,
      body: null,
      availableFrom: null,
      minRent: null,
      maxRent: null,
      rangeIndex: null,
      locations: [],
      tenants: null,
      hasPets: false,
      tenantsGender: null,
      smokeAllow: false,
      petsAllow: false,
      hasAirConditioner: false,
      hasFurniture: false,
      hasElevator: false,
      hasCookTop: false,
      hasAppliance: false,
      hasNetwork: false,

      // other
      showStatus: false,
      error: null,
    },
    computed: {
      addressBtnStatus() {
        return this.locations.length >= 4
      },
      now() {
        let date = new Date
        let year = date.getFullYear()
        let month = date.getMonth() + 1
        let day = date.getDate()
        return [year, "0" + month, day].join('-')
      },
      end() {
        let date = new Date
        date.setDate(date.getDate() + (7 * 4 * 6));
        let year = date.getFullYear()
        let month = date.getMonth() + 1
        let day = date.getDate()
        return [year, "0" + month, day].join('-')
      }
    },

    methods: {
      delLocation(e){
        let name = e.currentTarget.dataset.name
        let locations = []
        this.locations.forEach(function(item, index){
          if (item.name != name) {
            locations.push(item)
          }
        })
        this.locations = locations
      },
      showStatusBar(){
        this.showStatus = true
        let _this = this;
        setTimeout(function(){
          _this.showStatus = false
        }, 2000);
      },
      submit(e) {
        let form = {
          title: this.title,
          body: this.body,
          locations_attributes: this.locations,
          available_from: this.availableFrom,
          has_pets: this.hasPets,
          min_rent: this.minRent,
          max_rent: this.maxRent,
          post_type: 'house_mate',
          tenants: this.tenants,
          has_air_conditioner: this.hasAirConditioner,
          has_furniture: this.hasFurniture,
          has_elevator: this.hasElevator,
          has_cook_top:this.hasCookTop,
          has_appliance: this.hasAppliance,
          has_network: this.hasNetwork,
          tenants_gender: this.tenants_gender
        }
        let validator = this.initValidator(this.leaseTypeIndex == 1);
        let _this = this
        if (!validator.checkData({
          ...form,
          locations: (this.locations.length > 0) ? true : null
        })) return
        createPost(form).then(post => {
          _this.showStatusBar();
          setTimeout(function(){
            wepy.wx.navigateBack(1);
          }, 2000);
        })
      },
      chooseLocation(e) {        
        wepy.wx.chooseLocation().then((res) => {
          console.log(res)
          this.locations.push({
            name: res.name,
            address: res.address,
            longitude: res.longitude,
            latitude: res.latitude
          })
        }).catch((err) => {
          wepy.wx.getSetting().then((res) => {
            if(res.authSetting.length != 0 && !res.authSetting["scope.userLocation"]) {
              this.modalInfo = {
                title: '获取地理位置',
                body: '获取地理位置将帮助我们为您找到更合适的房源或室友, 请前往权限中心设置',
                confirmEvent: 'open-setting'
              }
              this.showModal = true;    
            }
          })
        })
      },
      initValidator() {
        let form_validation = {
          rules: {
            title: {
              required: true
            },
            body: {
              required: true
            },
            available_from: {
              required: true,
              date: true
            },
            locations: {
              required: true
            },
          },
          messages: {
            title: {
              required: '请填写标题'
            },
            locations: {
              required: '请添加至少一个常用地址'
            },
            body: {
              required: '请填写简介'
            },
            available_from: {
              required: '请填写入住日期',
              date: '日期格式不正确'
            }
          },
        }
        return new WeValidator(form_validation)
      },
      dateChange(e){
        this.availableFrom = e.$wx.detail.value
      }
    },
    onLoad() {
      // this.initValidator();
      eventHub.$on('modal-close', ()=>{
        this.showModal = false;
      })
      eventHub.$on('modal-confirm', ()=>{
        this.showModal = false;
        eventHub.$emit("open-setting");
      })
      eventHub.$on('active-btn-click', (res) => {
        if(res[0] == 'allowFemale'){
          this.tenants_gender = 'female'
          eventHub.$emit("change-ab-status", ['allowMale', false])
        } else if (res[0] == 'allowMale') {
          this.tenants_gender = 'male'
          eventHub.$emit("change-ab-status", ['allowFemale', false])
        } else {
          this[res[0]] = res[1];
        }
      });
    }
  });
</script>

<config>
  {
    navigationBarTitleText: '绑定手机',
    usingComponents: {
      modal: "~components/modal",
      activeBtn: "~components/activeBtn",
    }
  }
</config>